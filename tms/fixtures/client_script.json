[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "TMS Customer",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.613591",
  "module": "TMS",
  "name": "tms-customer-set-query",
  "script": "function setDf(frm){\n    if(frm.doc.state == undefined){\n            frm.set_df_property('county', 'read_only', 1)\n            frm.set_df_property('city', 'read_only', 1)\n        }else if(frm.doc.county == undefined){\n            frm.set_df_property('county', 'read_only', 0)\n            frm.set_df_property('city', 'read_only', 1)\n        }else{\n            frm.set_df_property('county', 'read_only', 0)\n            frm.set_df_property('city', 'read_only', 0)\n        }\n}\n\nfunction setOptions(frm){\n    frappe.db.get_list('County', {\n            filters: {\n                province: frm.doc.state\n            },\n            limit: 500,\n            fields: [\"title\"]\n        }).then(counties => {\n            const array = counties.map(e => e.title)\n            set_field_options(\"county\", array)\n            frappe.db.get_list('City', {\n            filters: {\n                county: frm.doc.county\n            },\n            limit: 500,\n            fields: [\"title\"]\n        }).then(counties => {\n            const array = counties.map(e => e.title)\n            set_field_options(\"city\", array)\n        })\n        })\n}\n\n\nfrappe.ui.form.on('TMS Customer', {\n    refresh(frm){\n        console.log(frm)\n        setOptions(frm)\n        setDf(frm)\n    },\n\tstate(frm) {\n\t    set_field_options(\"county\", [])\n\t    frm.set_value('county', null)\n\t    frm.set_value('city', null)\n\t    setOptions(frm)\n// \tfrm.set_query(\"county\", function() {\n//         return {\n//             \"filters\": {\n//                 \"province\": frm.doc.state,\n//             }\n//         };\n//     });\n\t},\n\tcounty(frm) {\n\t    set_field_options(\"city\", [])\n\t    frm.set_value('city', null)\n\t    setOptions(frm)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Money Send Record",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.724085",
  "module": "TMS",
  "name": "money-send-record-listview",
  "script": "const t = frappe.listview_settings['Money Send Record']\n\nfrappe.listview_settings['Money Send Record'] = {\n    ...t,\n    get_indicator(doc) {\n        // customize indicator color\n        if (doc.status == 'To Bill') {\n            return [__(\"To Bill\"), \"green\", \"status,=,To Bill\"];\n        }\n        else if (doc.status == 'Draft') {\n            return [__(\"Draft\"), \"red\", \"status,=,Draft\"];\n        }\n        else if (doc.status == 'Billed') {\n            return [__(\"Billed\"), \"grey\", \"status,=,Billed\"];\n        }else {\n            return [__(doc.status), \"red\", `status,=,${doc.status}`];\n        }\n    },\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.831306",
  "module": "TMS",
  "name": "sales-invoice-tms-setting",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh(frm) {\n\t\tfrm.set_query('tms_reference_doctype', () => {\n\t\t    return {\n\t\t        filters: {\n\t\t            name: ['in', ['Money Send Record']]\n\t\t        }\n\t\t    }\n\t\t})\n\t\tfrm.set_query('tms_reference_docname', () => {\n\t\t    return {\n\t\t        filters: {\n\t\t            docstatus: 1\n\t\t        }\n\t\t    }\n\t\t})\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "TMS Expense",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.397504",
  "module": "TMS",
  "name": "tms-expense-listview",
  "script": "const t = frappe.listview_settings['TMS Expense']\n\nfrappe.listview_settings['TMS Expense'] = {\n    ...t,\n    get_indicator(doc) {\n        // customize indicator color\n        if (doc.status == 'To Bill') {\n            return [__(\"To Bill\"), \"green\", \"status,=,To Bill\"];\n        }\n        else if (doc.status == 'Draft') {\n            return [__(\"Draft\"), \"red\", \"status,=,Draft\"];\n        }\n        else if (doc.status == 'Billed') {\n            return [__(\"Billed\"), \"grey\", \"status,=,Billed\"];\n        }else {\n            return [__(doc.status), \"red\", `status,=,${doc.status}`];\n        }\n    },\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Order Trip",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.777239",
  "module": "TMS",
  "name": "delivery-order-trip-list-view",
  "script": "const t = frappe.listview_settings['Delivery Order Trip']\n\nfrappe.listview_settings['Delivery Order Trip'] = {\n    ...t,\n    get_indicator(doc) {\n        // customize indicator color\n        if (doc.status == 'To Bill') {\n            return [__(\"To Bill\"), \"green\", \"status,=,To Bill\"];\n        }\n        else if (doc.status == 'Draft') {\n            return [__(\"Draft\"), \"red\", \"status,=,Draft\"];\n        }\n        else if (doc.status == 'Billed') {\n            return [__(\"Billed\"), \"grey\", \"status,=,Billed\"];\n        }else {\n            return [__(doc.status), \"red\", `status,=,${doc.status}`];\n        }\n    },\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Order Transfer",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.181718",
  "module": "TMS",
  "name": "delivery-order-transfer-listview",
  "script": "const t = frappe.listview_settings['Delivery Order Transfer']\n\nfrappe.listview_settings['Delivery Order Transfer'] = {\n    ...t,\n    get_indicator(doc) {\n        // customize indicator color\n        if (doc.status == 'To Bill') {\n            return [__(\"To Bill\"), \"green\", \"status,=,To Bill\"];\n        }\n        else if (doc.status == 'Draft') {\n            return [__(\"Draft\"), \"red\", \"status,=,Draft\"];\n        }\n        else if (doc.status == 'Billed') {\n            return [__(\"Billed\"), \"grey\", \"status,=,Billed\"];\n        }else {\n            return [__(doc.status), \"red\", `status,=,${doc.status}`];\n        }\n    },\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Receipt",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.288352",
  "module": "TMS",
  "name": "receipt-form",
  "script": "async function getDoc(type, name){\n    try{\n        const task = await frappe.call({\n        method: \"frappe.client.get\",\n        args: {\n            doctype: type,\n            name: name,\n        },\n        callback(r) {\n            if(r.message) {\n                var task = r.message;\n                return task.message || null\n            }\n        }\n    })\n    }catch(e){\n        return null\n    }\n}\n\nfunction calculate(frm){\n    let total = 0\n    cur_frm.doc.items.map(item => {\n        const amount = item.rate * item.qty\n        total += amount\n        item.amount = amount\n    })\n    cur_frm.doc.grand_total = parseFloat(total) + (parseFloat(total) * parseFloat(frm.doc.tax_not_included) / 100)\n    cur_frm.refresh()\n}\n\nfunction setQuery(frm){\n    frm.set_query(\"company_id\", function() {\n        return {\n            \"filters\": {\n                is_company_address: 1,\n                // company: cur_frm.doc.company\n            }\n        };\n    });\n    // frm.set_query(\"customer\", function() {\n    //     return {\n    //         \"filters\": {\n    //             is_company_address: 0,\n    //         }\n    //     };\n    // });\n}\n\n\nfrappe.ui.form.on('Receipt', {\n\trefresh(frm) {\n\t    console.log(frm)\n\t    setCreatePurchaseInvoiceButton(frm)\n\t},\n\tcompany(frm){\n\t    setQuery(frm)\n\t},\n\tcustomer_type(frm){\n\t    frm.doc.customer = null\n\t    frm.refresh()\n\t}\n})\n\nfrappe.ui.form.on('Receipt Item', {\n\trate(frm) {\n\t\tcalculate(frm)\n\t},\n\tqty(frm){\n\t    calculate(frm)\n\t},\n\titem_name(frm){\n\t    calculate(frm)\n\t},\n\titem_code(frm){\n\t    calculate(frm)\n\t},\n\ttax_not_included(frm){\n\t    calculate(frm)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "TMS Recipient",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.669342",
  "module": "TMS",
  "name": "tms-recipient-form",
  "script": "function setDf(frm){\n    if(frm.doc.state == undefined){\n            frm.set_df_property('county', 'read_only', 1)\n            frm.set_df_property('city', 'read_only', 1)\n        }else if(frm.doc.county == undefined){\n            frm.set_df_property('county', 'read_only', 0)\n            frm.set_df_property('city', 'read_only', 1)\n        }else{\n            frm.set_df_property('county', 'read_only', 0)\n            frm.set_df_property('city', 'read_only', 0)\n        }\n}\n\nfunction setOptions(frm){\n    frappe.db.get_list('County', {\n            filters: {\n                province: frm.doc.state\n            },\n            limit: 500,\n            fields: [\"title\"]\n        }).then(counties => {\n            const array = counties.map(e => e.title)\n            set_field_options(\"county\", array)\n            frappe.db.get_list('City', {\n            filters: {\n                county: frm.doc.county\n            },\n            limit: 500,\n            fields: [\"title\"]\n        }).then(counties => {\n            const array = counties.map(e => e.title)\n            set_field_options(\"city\", array)\n        })\n        })\n}\n\n\nfrappe.ui.form.on('TMS Recipient', {\n    refresh(frm){\n        setOptions(frm)\n        setQuery(frm)\n    },\n\tstate(frm) {\n\t    set_field_options(\"county\", [])\n\t    frm.set_value('county', null)\n\t    frm.set_value('city', null)\n\t    setOptions(frm)\n// \tfrm.set_query(\"county\", function() {\n//         return {\n//             \"filters\": {\n//                 \"province\": frm.doc.state,\n//             }\n//         };\n//     });\n\t},\n\tcounty(frm) {\n\t    set_field_options(\"city\", [])\n\t    frm.set_value('city', null)\n\t    setOptions(frm)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Tax Withholding",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.559497",
  "module": "TMS",
  "name": "tax-withholding-form",
  "script": "frappe.ui.form.on('Tax Withholding', {\n    refresh(frm){\n      frm.set_query(\"employee\", function() {\n        return {\n            \"filters\": {\n                \"is_company_address\": true\n            }\n        };\n    });  \n    },\n\tgrand_total(frm) {\n\t\t// your code here\n\t\tfrm.doc.tax_charge = frm.doc.grand_total * (1/100)\n\t\tfrm.refresh()\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Tax Customer",
  "enabled": 1,
  "modified": "2023-11-22 19:53:26.449615",
  "module": "TMS",
  "name": "tax-customer-form",
  "script": "function setDf(frm){\n    if(frm.doc.state == undefined){\n            frm.set_df_property('county', 'read_only', 1)\n            frm.set_df_property('city', 'read_only', 1)\n        }else if(frm.doc.county == undefined){\n            frm.set_df_property('county', 'read_only', 0)\n            frm.set_df_property('city', 'read_only', 1)\n        }else{\n            frm.set_df_property('county', 'read_only', 0)\n            frm.set_df_property('city', 'read_only', 0)\n        }\n}\n\nfunction setOptions(frm){\n    frappe.db.get_list('County', {\n            filters: {\n                province: frm.doc.state\n            },\n            limit: 500,\n            fields: [\"title\"]\n        }).then(counties => {\n            const array = counties.map(e => e.title)\n            set_field_options(\"county\", array)\n            frappe.db.get_list('City', {\n            filters: {\n                county: frm.doc.county\n            },\n            limit: 500,\n            fields: [\"title\"]\n        }).then(counties => {\n            const array = counties.map(e => e.title)\n            set_field_options(\"city\", array)\n        })\n        })\n}\n\n\nfrappe.ui.form.on('Tax Customer', {\n    refresh(frm){\n        console.log(frm)\n        setOptions(frm)\n        setDf(frm)\n    },\n\tstate(frm) {\n\t    set_field_options(\"county\", [])\n\t    frm.set_value('county', null)\n\t    frm.set_value('city', null)\n\t    setOptions(frm)\n// \tfrm.set_query(\"county\", function() {\n//         return {\n//             \"filters\": {\n//                 \"province\": frm.doc.state,\n//             }\n//         };\n//     });\n\t},\n\tcounty(frm) {\n\t    set_field_options(\"city\", [])\n\t    frm.set_value('city', null)\n\t    setOptions(frm)\n\t}\n})",
  "view": "Form"
 }
]